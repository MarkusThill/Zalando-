axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) +
scale_fill_brewer(palette = "gray")
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) +
scale_fill(palette = "gray")
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_colour_grey()
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_grey()
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_grey(start = 0, end = .9)
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_colour_grey(start = 0, end = .9)
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_colour_grey(start = 0, end = .9)
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
#theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_colour_grey(start = 0, end = .9)
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_grey(start = 0, end = .9)
View(melted)
scale_fill_grey(start = 0, end = .9)
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_grey(start = 0, end = .9)
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_gradient(low="green", high="red")
ggplot(melted, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_gradient(low="white", high="black")
data <- array(train$x[1:100, ], dim = c(100, 28, 28))
plotData <- melt(data, varnames = c("image", "x", "y"), value.name = "intensity")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank()
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank()
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend  = element_blank()
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = element_blank()
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none"
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none"
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none"
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()
) + scale_fill_gradient(low="white", high="black")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
) + scale_fill_gradient(low="white", high="black")
order(train$y)
train.y
train$y
nclass <- unique(train$y)
nclass
classes <- order(unique(train$y))
classes <- sort(unique(train$y))
nclass <- length(classes)
nClasses <- length(classes)
sapply(classes, function(i) which(train$y == i)[1:10] )
as.matrix(sapply(classes, function(i) which(train$y == i)[1:10] ))
iExamples <- as.matrix(sapply(classes, function(i) which(train$y == i)[1:10] ))
data <- array(train$x[iExamples, ], dim = c(100, 28, 28))
plotData <- melt(data, varnames = c("image", "x", "y"), value.name = "intensity")
ggplot(plotData, aes(x = x, y = y, fill = intensity)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = 10) + # , labeller = labeller(image = image_labels)+
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
) + scale_fill_gradient(low="white", high="black")
setwd("~/Desktop/Zalando ")
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
show_digit(train$x[1,]) # plot one example of the data
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
summary(train$y)
summary(as.factor(train$y))
source('~/Desktop/Zalando /readData.R')
p <- ggplot(plotData, aes(x = x, y = y, fill = pixel)) +
geom_tile() +
#scale_y_reverse() +
facet_wrap(~ image, ncol = 10) +
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
) + scale_fill_gradient(low="white", high="black")
plot(p)
source('~/Desktop/Zalando /readData.R')
iExamples
source('~/Desktop/Zalando /readData.R')
iExamples <- as.vector(sapply(classes, function(i) which(train$y == i)[1:nExamplesClass] ))
data <- array(train$x[iExamples, ], dim = c(nExamplesClass*classes, 28, 28))
plotData <- melt(data, varnames = c("image", "x", "y"), value.name = "pixel")
View(plotData)
nExamplesClass*classes
iExamples <- as.matrix(sapply(classes, function(i) which(train$y == i)[1:nExamplesClass] ))
data <- array(train$x[iExamples, ], dim = c(nExamplesClass*nClasses, 28, 28))
plotData <- melt(data, varnames = c("image", "x", "y"), value.name = "pixel")
p <- ggplot(plotData, aes(x = x, y = y, fill = pixel)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = nExamplesClass) +
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
) + scale_fill_gradient(low="white", high="black")
plot(p)
source('~/Desktop/Zalando /readData.R')
setwd("~/mySVN/src/Yahoo")
source('~/mySVN/src/Yahoo/runAnomalyDetection.R')
install.packages("future", dependencies = T)
source('~/mySVN/src/Yahoo/runAnomalyDetection.R')
source('~/mySVN/src/Yahoo/runAnomalyDetection.R')
source('~/mySVN/src/Yahoo/utils/examplePlot.R')
setwd("~/AnomalyDetection/src/Yahoo")
source('~/AnomalyDetection/src/Yahoo/runAnomalyDetection.R')
setwd("~/Desktop/Zalando ")
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
iExamples
sample(x = iExamples, size = length(iExamples), replace = F)
matrix(sample(x = iExamples, size = length(iExamples), replace = F), nrow = dim(iExamples)[1])
matrix(sample(x = iExamples, size = length(iExamples), replace = F), nrow = dim(iExamples)[1])
iExamples <- matrix(sample(x = iExamples, size = length(iExamples), replace = F), nrow = dim(iExamples)[1])
data <- array(train$x[iExamples, ], dim = c(nExamplesClass*nClasses, 28, 28))
plotData <- melt(data, varnames = c("image", "x", "y"), value.name = "pixel")
p <- ggplot(plotData, aes(x = x, y = y, fill = pixel)) +
geom_tile() +
scale_y_reverse() +
facet_wrap(~ image, ncol = round(sqrt(nExamplesClass*nClasses))) +
theme_bw()+
theme(
panel.spacing = unit(0, "lines"),
axis.text = element_blank(),
axis.ticks = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position   = "none",
axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.y=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()
) + scale_fill_gradient(low="white", high="black")
plot(p)
round(sqrt(nExamplesClass*nClasses))
sqrt(nExamplesClass*nClasses)
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
dev.off()
dev.off()
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
sqrt(600)
sqrt(650)
25*10
sqrt(30*10)
sqrt(40*10)
sqrt(50*10)
sqrt(60*10)
sqrt(70*10)
sqrt(80*10)
sqrt(90*10)
is.discrete(3)
is.discrete(3.0)
is.integer(3)
is.integer(3.0)
is.natural <- function(x)
{
x>0 && identical(round(x), x)
}
s = 1:1000
is.natural(3.0)
is.natural(3.1)
3 %% 10
11 %% 10
which(is.natural(sqrt(s)) & (s %% 10) == 0)
which(is.natural(sqrt(s)) && (s %% 10) == 0)
which(is.natural(sqrt(s)))
s = 1:1000
which(is.natural(sqrt(s)))
is.natural(sqrt(s))
apply(s, 1, is.natural)
apply(s, 2, is.natural)
sapply(s, is.natural)
s = 3
sapply(s, is.natural)
s = c(1,2,3)
sapply(s, is.natural)
s = 1:100
sapply(s, is.natural)
s = c(1:100)
sapply(s, is.natural)
1:100
s = c(1:10)
sapply(s, is.natural)
s = c(1:3)
sapply(s, is.natural)
is.natural(sqrt(s))
s = c(1:3)*1.0
sapply(s, is.natural)
s = c(1:1000)*1.0
sapply(s, is.natural)
sapply(sqrt(s), is.natural)
c2 <- (s %% 10) == 0
c2
which(c1 & c2)
c1 <- sapply(sqrt(s), is.natural)
c2 <- (s %% 10) == 0
which(c1 & c2)
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
showExamples(12, F)
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
source('~/Desktop/Zalando /readData.R')
